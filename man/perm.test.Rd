% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/perm.test.R
\name{perm.test}
\alias{perm.test}
\title{Permutation test on monothetic tree}
\usage{
perm.test(object, data, auto.pick = FALSE, sig.val = 0.05,
  method = 1, rep = 10000, stat = "F")
}
\arguments{
\item{object}{The MonoClust object as the result of the clustering.}

\item{data}{The data set which is being clustered.}

\item{auto.pick}{Whether the algorithm stops when p-value becomes larger than
sig.val or keeps testing and let the researcher pick the final splitting
tree. Default value is FALSE.}

\item{sig.val}{Significance value to decide when to stop splitting. This
option is ignored if auto.pick is FALSE.}

\item{method}{Can be chosen between 1 (default), 2, or 3. See description
above the details.}

\item{rep}{Number of permutations to calculate test statistic.}

\item{stat}{Statistic to use, choosing between "F" (default), "AW".}
}
\value{
The same MonoClust object with an updated frame with one extra
column (p-value), and the numofclusters chosen if auto.pick is TRUE
}
\description{
Testing the significance of each monothetic clustering split by permutation
methods. The original method (method 1) shuffles the observations between two
groups without the splitting variable. The new methods shuffle the values in
the splitting variable to create a new data set, then it either splits again
on that variable (method 2) or use all variables as the splitting candidates
(method 3).
}
\examples{
EMPTY
}
